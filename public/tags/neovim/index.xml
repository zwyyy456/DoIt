<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Neovim on My New Hugo Site</title>
    <link>http://localhost:1313/tags/neovim/</link>
    <description>Recent content in Neovim on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Apr 2024 15:08:52 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/neovim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Neovim 快捷键配置</title>
      <link>http://localhost:1313/posts/blog/nvim_keymap.zh/</link>
      <pubDate>Sun, 05 Nov 2023 17:05:51 +0800</pubDate>
      <guid>http://localhost:1313/posts/blog/nvim_keymap.zh/</guid>
      <description>Vim 快捷键 这一部分是 Vim 的默认快捷键，例如 gg、dd 等。&#xA;normal 模式快捷键 按键 操作 按键 操作 i 切换到插入模式 : 切换到命令模式 h 左移一个字符 j 下移一个字符 k 上移一个字符 l 右移一个字符 0 移至行首 $ 移至行尾 ^ 移至本行第一个非空字符 w 向右移动一个单词 W 向右移动一个单词（以空格分隔） 2w 向右移动两个单词 2W 向右移动两个单词（以空格分隔） b 向左移动一个单词 B 向左移动一个单词（以空格分隔） 2b 向左移动 2 个单词 2B 向左移动 2 个单词（以空格分隔） G 移至文档末尾 gg 移至文档首行 a 光标后插入 A 移至行末插入 o 光标下插入一行 O 光标上插入一行 x 删除光标处字符 dw 删除一个词 d0 删至行首 d$ 删至行尾 d) 删至句末 dgg 删至文件开头 dG 删至文件末尾 dd 删除该行 2dd 删除两行 r 替换当前字符 R 切换到 REPLACE 模式 u 撤回操作 &amp;lt;C-r&amp;gt; 重做撤回的操作 yy 复制当前行 p 在当前行之后粘贴内容 P 在当前行之前粘贴内容 v 打开 VISUAL 模式菜单 V 切换到逐行选择的 VISUAL 模式 / 向后搜索 ?</description>
    </item>
    <item>
      <title>Neovim 的配置与使用</title>
      <link>http://localhost:1313/posts/blog/neovim_tutorial.zh/</link>
      <pubDate>Fri, 17 Mar 2023 15:08:52 +0800</pubDate>
      <guid>http://localhost:1313/posts/blog/neovim_tutorial.zh/</guid>
      <description>安装 LazyVim 参考 Lazyvim 的官方安装教程即可安装，要求系统已经安装好了 npm。&#xA;实际上就是 clone folke 的适用于 LazyVim 的初始 配置文件 到 Neovim 的配置文件所处的目录，Linux 和 macOS 都是 ~/.config，Windows 比较特殊，位于 ~/AppData/Local/。&#xA;由于我对初始配置文件做了一定的修改，因此我这里直接 clone 我自己的 配置文件&#xA;It is recommended to run :checkhealth after installation&#xA;值得注意的是，LazyVim 会安装 nvim-treesitter 插件，而 nvim-treesitter 插件会自动编译安装 C/C++ 等语言的解析器，而编译安装是需要 C/C++ 的运行环境的，对安装了 Command Line Tool 的 Mac 或者 Linux 而言，这一步一般不会存在问题，Windows 则是容易出现问题，我在重装 Windows 系统后尝试过只通过 scoop 安装了 llvm，尽管命令行中执行 clang --version 是有正常输出的，即 C/C++ 运行环境已经正常安装好了，但是 nvim-treesitter 始终无法正常编译解释器，不得已，我又通过 scoop install mingw 安装了 mingw（gcc），安装好 mingw 之后，解释器就能正常被编译安装了，此后执行 scoop uninstall mingw 卸载掉 mingw 也还是能正常使用。</description>
    </item>
  </channel>
</rss>
