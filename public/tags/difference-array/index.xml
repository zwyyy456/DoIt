<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Difference Array on My New Hugo Site</title>
    <link>http://localhost:1313/tags/difference-array/</link>
    <description>Recent content in Difference Array on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Oct 2023 11:17:08 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/difference-array/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>798. 得分最高的最小轮调 (Hard)</title>
      <link>http://localhost:1313/posts/leet/798.smallest-rotation-with-highest-score.zh/</link>
      <pubDate>Mon, 23 Oct 2023 11:17:08 +0800</pubDate>
      <guid>http://localhost:1313/posts/leet/798.smallest-rotation-with-highest-score.zh/</guid>
      <description>问题描述 798. 得分最高的最小轮调 (Hard)&#xA;给你一个数组 nums，我们可以将它按一个非负整数 k 进行轮调，这样可以使数组变为 [nums[k], nums[k + 1], ... nums[nums.length - 1], nums[0], nums[1], ..., nums[k-1]] 的形式。此后，任何值小于或等于其索 引的项都可以记作一分。&#xA;例如，数组为 nums = [2,4,1,3,0]，我们按 k = 2 进行轮调后，它将变成 [1,3,0,2,4]。这将记为 3 分，因为 1 &amp;gt; 0 [不计分]、 3 &amp;gt; 1 [不计分]、 0 &amp;lt;= 2 [计 1 分]、 2 &amp;lt;= 3 [计 1 分]， 4 &amp;lt;= 4 [计 1 分]。 在所有可能的轮调中，返回我们所能得到的最高分数对应的轮调下标 k 。如果有多个答案，返回满足条件的最 小的下标 k 。&#xA;示例 1：&#xA;输入：nums = [2,3,1,4,0] 输出：3 解释： 下面列出了每个 k 的得分： k = 0, nums = [2,3,1,4,0], score 2 k = 1, nums = [3,1,4,0,2], score 3 k = 2, nums = [1,4,0,2,3], score 3 k = 3, nums = [4,0,2,3,1], score 4 k = 4, nums = [0,2,3,1,4], score 3 所以我们应当选择 k = 3，得分最高。 示例 2：</description>
    </item>
    <item>
      <title>差分数组</title>
      <link>http://localhost:1313/posts/tech/difference_array.zh/</link>
      <pubDate>Fri, 06 Oct 2023 17:50:12 +0800</pubDate>
      <guid>http://localhost:1313/posts/tech/difference_array.zh/</guid>
      <description>介绍 考虑原数组为 $[1, 3, 3, 5, 8]$，我们对相邻元素做差，用 $a_i - a_{i - 1}$，可以得到一个差分数组 $[1, 2, 0, 2, 3]$ $diff$，我们认为 $a_{-1}$ 为 $0$，因此&#xA;$$diff[i] = \begin{cases} a[0] &amp;amp; i = 0 \newline a[i] - a[i - 1] &amp;amp; i &amp;gt; 0\end{cases}$$&#xA;性质 差分数组往往和前缀和数组放在一块讨论，事实上，差分数组的前缀和即可还原出原数组。即：&#xA;$$ a[k] = \sum\limits_{i = 0}^k diff[i]$$&#xA;差分数组还有一个非常重要的性质，那就是它可以将区间修改（将区间中的每个元素都加一个值或者减一个值）变成单点修改。&#xA;例如，加入我们要将区间 $[i, j]$ 中的每个元素都加 $c$，那么我们只需要将 $diff[i]$ 加 $c$，并将 $diff[j + 1]$ 减去 $c$ 即可，由这个差分数组取前缀和还原出来的原数组，就是我们修改后的原数组。</description>
    </item>
  </channel>
</rss>
