<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>String on My New Hugo Site</title>
    <link>http://localhost:1313/tags/string/</link>
    <description>Recent content in String on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 May 2023 11:52:54 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/string/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>字符串哈希算法</title>
      <link>http://localhost:1313/posts/tech/string_hash.zh/</link>
      <pubDate>Mon, 15 May 2023 11:52:54 +0800</pubDate>
      <guid>http://localhost:1313/posts/tech/string_hash.zh/</guid>
      <description>问题描述 考虑 1044. 最长重复子串 (Hard)，本题思路并不难，可以使用二分答案来解决，假设答案为 mid，那么长度大于 mid 的子串在 s 中只会出现一次，否则至少出现两次。&#xA;因此只需要考虑子串在 s 中的出现次数即可，比较直接的想法是使用 key 为 string 的 unordered_map，然而 unoredere_map 自带的哈希函数，其时间复杂度和空间复杂度都很高，为 $O(len)$，因此，需要一个简单一点的哈希函数。&#xA;字符串哈希 参照宫水三叶大佬的 字符串哈希。&#xA;我们需要使用一个比字符串 s 略长的哈希数组 vector&amp;lt;int&amp;gt; h(s.size() + 10)，以及次方数组 vector&amp;lt;int&amp;gt; p(s.size() + 10)。 对长度为 len 的数组，只需要利用前缀和思想 h[i + len] - h[i] * p[len] 即可在 $O(1)$ 时间内计算出哈希值。&#xA;其中 p[0] = 1，h[i] = h[i - 1] * P + s[i - 1]；p[i] = p[i - 1] * P。&#xA;$P$ 可以依次取 $131,\ 13131,\ 1313131$ 等，出现哈希碰撞就考虑取更大的质数。</description>
    </item>
  </channel>
</rss>
